package br.com.danielsan.dscontacts.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import br.com.danielsan.dscontacts.dao.Contact;
import br.com.danielsan.dscontacts.dao.Tag;
import br.com.danielsan.dscontacts.dao.Nickname;
import br.com.danielsan.dscontacts.dao.Note;
import br.com.danielsan.dscontacts.dao.Website;
import br.com.danielsan.dscontacts.dao.Address;
import br.com.danielsan.dscontacts.dao.Email;
import br.com.danielsan.dscontacts.dao.Event;
import br.com.danielsan.dscontacts.dao.IM;
import br.com.danielsan.dscontacts.dao.Phone;
import br.com.danielsan.dscontacts.dao.Relationship;

import br.com.danielsan.dscontacts.dao.ContactDao;
import br.com.danielsan.dscontacts.dao.TagDao;
import br.com.danielsan.dscontacts.dao.NicknameDao;
import br.com.danielsan.dscontacts.dao.NoteDao;
import br.com.danielsan.dscontacts.dao.WebsiteDao;
import br.com.danielsan.dscontacts.dao.AddressDao;
import br.com.danielsan.dscontacts.dao.EmailDao;
import br.com.danielsan.dscontacts.dao.EventDao;
import br.com.danielsan.dscontacts.dao.IMDao;
import br.com.danielsan.dscontacts.dao.PhoneDao;
import br.com.danielsan.dscontacts.dao.RelationshipDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig contactDaoConfig;
    private final DaoConfig tagDaoConfig;
    private final DaoConfig nicknameDaoConfig;
    private final DaoConfig noteDaoConfig;
    private final DaoConfig websiteDaoConfig;
    private final DaoConfig addressDaoConfig;
    private final DaoConfig emailDaoConfig;
    private final DaoConfig eventDaoConfig;
    private final DaoConfig iMDaoConfig;
    private final DaoConfig phoneDaoConfig;
    private final DaoConfig relationshipDaoConfig;

    private final ContactDao contactDao;
    private final TagDao tagDao;
    private final NicknameDao nicknameDao;
    private final NoteDao noteDao;
    private final WebsiteDao websiteDao;
    private final AddressDao addressDao;
    private final EmailDao emailDao;
    private final EventDao eventDao;
    private final IMDao iMDao;
    private final PhoneDao phoneDao;
    private final RelationshipDao relationshipDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        contactDaoConfig = daoConfigMap.get(ContactDao.class).clone();
        contactDaoConfig.initIdentityScope(type);

        tagDaoConfig = daoConfigMap.get(TagDao.class).clone();
        tagDaoConfig.initIdentityScope(type);

        nicknameDaoConfig = daoConfigMap.get(NicknameDao.class).clone();
        nicknameDaoConfig.initIdentityScope(type);

        noteDaoConfig = daoConfigMap.get(NoteDao.class).clone();
        noteDaoConfig.initIdentityScope(type);

        websiteDaoConfig = daoConfigMap.get(WebsiteDao.class).clone();
        websiteDaoConfig.initIdentityScope(type);

        addressDaoConfig = daoConfigMap.get(AddressDao.class).clone();
        addressDaoConfig.initIdentityScope(type);

        emailDaoConfig = daoConfigMap.get(EmailDao.class).clone();
        emailDaoConfig.initIdentityScope(type);

        eventDaoConfig = daoConfigMap.get(EventDao.class).clone();
        eventDaoConfig.initIdentityScope(type);

        iMDaoConfig = daoConfigMap.get(IMDao.class).clone();
        iMDaoConfig.initIdentityScope(type);

        phoneDaoConfig = daoConfigMap.get(PhoneDao.class).clone();
        phoneDaoConfig.initIdentityScope(type);

        relationshipDaoConfig = daoConfigMap.get(RelationshipDao.class).clone();
        relationshipDaoConfig.initIdentityScope(type);

        contactDao = new ContactDao(contactDaoConfig, this);
        tagDao = new TagDao(tagDaoConfig, this);
        nicknameDao = new NicknameDao(nicknameDaoConfig, this);
        noteDao = new NoteDao(noteDaoConfig, this);
        websiteDao = new WebsiteDao(websiteDaoConfig, this);
        addressDao = new AddressDao(addressDaoConfig, this);
        emailDao = new EmailDao(emailDaoConfig, this);
        eventDao = new EventDao(eventDaoConfig, this);
        iMDao = new IMDao(iMDaoConfig, this);
        phoneDao = new PhoneDao(phoneDaoConfig, this);
        relationshipDao = new RelationshipDao(relationshipDaoConfig, this);

        registerDao(Contact.class, contactDao);
        registerDao(Tag.class, tagDao);
        registerDao(Nickname.class, nicknameDao);
        registerDao(Note.class, noteDao);
        registerDao(Website.class, websiteDao);
        registerDao(Address.class, addressDao);
        registerDao(Email.class, emailDao);
        registerDao(Event.class, eventDao);
        registerDao(IM.class, iMDao);
        registerDao(Phone.class, phoneDao);
        registerDao(Relationship.class, relationshipDao);
    }
    
    public void clear() {
        contactDaoConfig.getIdentityScope().clear();
        tagDaoConfig.getIdentityScope().clear();
        nicknameDaoConfig.getIdentityScope().clear();
        noteDaoConfig.getIdentityScope().clear();
        websiteDaoConfig.getIdentityScope().clear();
        addressDaoConfig.getIdentityScope().clear();
        emailDaoConfig.getIdentityScope().clear();
        eventDaoConfig.getIdentityScope().clear();
        iMDaoConfig.getIdentityScope().clear();
        phoneDaoConfig.getIdentityScope().clear();
        relationshipDaoConfig.getIdentityScope().clear();
    }

    public ContactDao getContactDao() {
        return contactDao;
    }

    public TagDao getTagDao() {
        return tagDao;
    }

    public NicknameDao getNicknameDao() {
        return nicknameDao;
    }

    public NoteDao getNoteDao() {
        return noteDao;
    }

    public WebsiteDao getWebsiteDao() {
        return websiteDao;
    }

    public AddressDao getAddressDao() {
        return addressDao;
    }

    public EmailDao getEmailDao() {
        return emailDao;
    }

    public EventDao getEventDao() {
        return eventDao;
    }

    public IMDao getIMDao() {
        return iMDao;
    }

    public PhoneDao getPhoneDao() {
        return phoneDao;
    }

    public RelationshipDao getRelationshipDao() {
        return relationshipDao;
    }

}
